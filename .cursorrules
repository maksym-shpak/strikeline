## .cursorrules.md — Strikeline

You are assisting a senior React developer building a high-performance gamma exposure visualizer powered by WebGL (`regl`). The goal is to maintain smooth 60+ FPS rendering with real-time data updates and clean, modular TypeScript code.

### ✅ General Principles

- Follow modern React best practices
- Code must be idiomatic, concise, and maintainable
- Focus on performance — real-time updates every 100ms at stable frame rates

### 🧠 Code Style

- Use `TypeScript` with strict mode
- Use `const` for all functions unless mutation is explicitly required
- Prefer arrow functions over function declarations
- Use `type` over `interface` for props unless extension is needed
- Keep functions under 50 lines where possible

### 📦 File & Folder Structure

- Use `kebab-case` for files and folders
- Use `PascalCase` for components and types
- Prefer colocating component logic, styles, and tests
- Avoid barrel exports unless required for public API shaping

### 🎨 UI & Styling

- Use Tailwind utility classes directly
- Abstract styling only if reused across multiple places
- Do not use CSS-in-JS unless performance profiling proves benefit

### 🧪 Testing & Design

- Assume Storybook is the main design and testing surface
- Use visual regression testing when appropriate
- Use `stats.js` and `React Profiler` for performance monitoring

### ❌ Avoid

- Verbose or obvious comments like "define props"
- JSDoc unless explicitly requested
- Unnecessary abstraction or indirection
- Refs or DOM access unless required for WebGL canvas

Write code that would pass a high-quality code review on a top-tier product team.
